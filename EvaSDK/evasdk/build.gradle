/*import org.apache.tools.ant.taskdefs.condition.Os*/


apply plugin: 'com.android.library'



android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    publishNonDefault true   // http://stackoverflow.com/a/29163361/519995

    sourceSets {
        main {
            jni.srcDirs = ['ogg/src', 'flac/src/libFLAC', 'jni']
            //jniLibs.srcDir 'src/main/libs' //set .so files location to libs
            //jni.srcDirs = [] //disable automatic ndk-build call
        }

        //main.java.srcDirs += 'src/main/generated-sources'
    }

    resourcePrefix 'evature_'

    // auto-increment version each build
    def versionPropsFile = file('version.properties')
    def Properties versionProps = new Properties()
    if(versionPropsFile.exists())
        versionProps.load(new FileInputStream(versionPropsFile))

    def code = versionProps['VERSION_CODE']
    if (code == null)
        code = 0
    else
        code = code.toInteger()

    def name = versionProps['VERSION_NAME']
    if (name == null)
        name = "2.0."+code

    defaultConfig {
        versionCode code
        versionName name
        minSdkVersion 8
        targetSdkVersion 23
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}



/*
buildscript {
    repositories {
        maven {
            url "http://repo1.maven.org/maven2/"
        }
    }

    dependencies {
        classpath group: 'net.sourceforge.fmpp', name: 'fmpp', version: '0.9.15'
    }

    ant.taskdef(name: 'fmpp', classname:'fmpp.tools.AntTask', classpath: buildscript.configurations.classpath.asPath)
}

task genSources << {
    println "Generating sources...."
    ant.fmpp configuration:"src/main/codegen/config.fmpp",
            sourceRoot:"src/main/codegen/templates",
            outputRoot:"src/main/generated-sources",
            data:"tdd(../setup.tdd)";
}
tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn genSources
}

gradle.projectsEvaluated {
    preBuild.dependsOn genSources
}
*/

dependencies {
    compile fileTree(dir: 'jniLibs', include: ['*.jar', '*.so'])
    compile "com.android.support:support-v4:23+"
}

// http://tools.android.com/tech-docs/new-build-system/tips#TOC-Improving-Build-Server-performance.
project.ext.preDexLibs = !project.hasProperty('disablePreDex')
subprojects {
    project.plugins.whenPluginAdded { plugin ->
        if ("com.android.build.gradle.AppPlugin".equals(plugin.class.name)) {
            project.android.dexOptions.preDexLibraries = rootProject.ext.preDexLibs
        } else if ("com.android.build.gradle.LibraryPlugin".equals(plugin.class.name)) {
            project.android.dexOptions.preDexLibraries = rootProject.ext.preDexLibs
        }
    }
}



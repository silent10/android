apply plugin: 'com.android.library'



android {
    compileSdkVersion 25
    buildToolsVersion '25.0.0'

    sourceSets {
        main {
            jni.srcDirs = ['ogg/src', 'flac/src/libFLAC', 'jni']
            //jniLibs.srcDir 'src/main/libs' //set .so files location to libs
            //jni.srcDirs = [] //disable automatic ndk-build call
        }

        //main.java.srcDirs += 'src/main/generated-sources'
    }


    resourcePrefix 'evature_'

    // auto-increment version each build
    def versionPropsFile = file('version.properties')
    def Properties versionProps = new Properties()
    if (versionPropsFile.exists())
        versionProps.load(new FileInputStream(versionPropsFile))

    def code = versionProps['VERSION_CODE']
    if (code == null)
        code = 0
    else
        code = code.toInteger()

    code += 1
    def name = versionProps['VERSION_NAME']
    if (name == null)
        name = "2.1"
    else
        name = name.substring(0, name.lastIndexOf("."))
    name += '.' + code

    versionProps['VERSION_CODE'] = code.toString()
    versionProps['VERSION_NAME'] = name.toString()
    versionProps.store(versionPropsFile.newWriter(), null)

    defaultConfig {
        versionCode code
        versionName name
        minSdkVersion 14
        targetSdkVersion 23
    }
}



dependencies {
    compile fileTree(dir: 'jniLibs', include: ['*.jar', '*.so'])
    compile 'com.android.support:support-v4:25.3.1'
}

// http://tools.android.com/tech-docs/new-build-system/tips#TOC-Improving-Build-Server-performance.
project.ext.preDexLibs = !project.hasProperty('disablePreDex')
subprojects {
    project.plugins.whenPluginAdded { plugin ->
        if ("com.android.build.gradle.AppPlugin".equals(plugin.class.name)) {
            project.android.dexOptions.preDexLibraries = rootProject.ext.preDexLibs
        } else if ("com.android.build.gradle.LibraryPlugin".equals(plugin.class.name)) {
            project.android.dexOptions.preDexLibraries = rootProject.ext.preDexLibs
        }
    }
}



